# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger: none

schedules:
- cron: "0 10 * * *"
  displayName: Daily build
  branches:
    include:
    - master
- cron: "0 8 * * 0"
  displayName: Weekly Sunday build
  branches:
    include:
    - master
  always: true

jobs:
  - job: WindowsPip
    pool:
      vmImage: 'windows-latest'
    strategy:
      matrix:
        Python37:
          python.version: '3.7'
        Python38:
          python.version: '3.8'

    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
        addToPath: true
      displayName: 'Use Python $(python.version)'

    - script: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install .
      displayName: 'Install Library'

    - script: |
        pip install pytest pytest-azurepipelines
        python -m pytest
      displayName: 'pytest'

  - job: WindowsAnaconda
    pool:
      vmImage: 'windows-latest'
    strategy:
      matrix:
        Python37:
          python.version: '3.7'
        Python38:
          python.version: '3.8'

    steps:
    - powershell: Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
      displayName: Add conda to PATH

    - script: conda create --yes --quiet --name baseAnaconda python=$(python.version) anaconda
      displayName: Create Anaconda environment & Install packages

    - script: |
        call activate baseAnaconda
        python setup.py install
      displayName: Install miningpy package in conda env
    
    - script: |
        call activate baseAnaconda
        pip install pytest pytest-azurepipelines
        python -m pytest
      displayName: pytest