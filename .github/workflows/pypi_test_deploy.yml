# Python package
# Test deploying package to PyPi

on:
  workflow_dispatch:
  push:
    branches:
    - none
  pull_request:
    branches:
    - none
  schedule:
  - cron: '0 9 * * *'
jobs:
  Test_PyPi_Deploy:
    strategy:
      matrix:
        python-version: ["3.10"]
    runs-on: windows-latest
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    steps:
    - name: Check out Repository
      uses: actions/checkout@v3
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Deployment Requirements
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install twine
        pip install wheel
    - name: Get current time
      uses: josStorer/get-current-time@v2
      id: current-time
      with:
        format: YYYYMMDDHHmm
    - name: Print current time
      run: |
        echo "time: ${{ steps.current-time.outputs.formattedTime }}"
    - name: Get library version
      # id must be specified to retrieve the output of the step
      id: version-step
      uses: michmich112/extract-version@main
      with:
        # specify here the path to your version file (e.g. package.json, pom.xml...)
        version-file: miningpy/VERSION
        schema: major.minor.build
    - name: Print library version
      run: |
        echo "version: ${{ steps.version-step.outputs.version }}"
    - name: Build/Check Project
      run: |
        python setup.py sdist bdist_wheel --testversion ${{ steps.version-step.outputs.version }}.${{ steps.current-time.outputs.formattedTime }}
        twine check dist/*
    - name: Deploy Project
      run: twine upload --repository testpypi dist/*
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_TEST_TWINE_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_TEST_TWINE_PASSWORD }}
